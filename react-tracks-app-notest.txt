Frontend = React
Backend = Django + Graphql

1. Install django, graphene-django, django-graphql-jwt, django-cors-headers
    $pipenv install django graphene-django django-graphql-jwt django-cors-headers

2. Install Codeformatter = autopep8 as a dev package.
    $pipenv install --dev autopep8

3. Create a django project called app.
    $django-admin startproject app

4. Create an initial database setup using manage.py file.
    $cd app
    $python manage.py migrate  #creates the sqlite3 database.

5. Start the Django Server to check if it is working properly.
    $python manage.py runserver

6. Django separates the project into individual apps. We need individual app according to the type of data the app will have.
    In this project we have two types: a) Tracks.
                                        b) Users.
7. To create an app in Django:
    $python manage.py startapp tracks

8. We need to model the tracks app. To build out the features of tracks app.
    $cd tracks
    $ open models.py

9. Create a Track model class with fields title,description, url, created_at.

10. To activate the model, go to app/app/settings.py
    - Add the app name 'tracks' in the INSTALLED_APPS section.

11. To update the database according to the Model, We make migrations.
    -$python manage.py makemigrations
    - $python manage.py migrate

12. To write the data to database we can use django admin page or django interactive shell.
    - $python manage.py shell #Starts the django shell.
    - $from tracks.models import Track # To access the Track Model
    - $Track.objects.create(title="title1", description="Track1 desc", url="https://track1.com") # Inserts the values to Track Table.
    - $exit() #To exit from interactive shell.
